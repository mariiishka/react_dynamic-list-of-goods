{"version":3,"sources":["components/GoodsList.tsx","api/goods.ts","enums/GoodsToLoad.ts","App.tsx","index.tsx"],"names":["GoodsList","memo","goods","map","good","style","color","name","id","getAll","fetch","then","response","json","GoodsToLoad","App","useState","setGoods","loadGoods","toLoad","AllGoods","items","firstFiveGoods","sort","a","b","localeCompare","slice","RedGoods","filter","item","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"wMAMaA,EAAuBC,gBAAK,YAAgB,IAAbC,EAAY,EAAZA,MAC1C,OACE,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAkBC,MAAO,CAAEC,MAAOF,EAAKE,OAAvC,SACGF,EAAKG,MADCH,EAAKI,YCPf,SAASC,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,ICRKC,G,SAAAA,O,uBAAAA,I,mCAAAA,I,wBAAAA,M,KCOZ,IAiDeC,EAjDOd,gBAAK,WACzB,MAA0Be,mBAAiB,IAA3C,mBAAOd,EAAP,KAAce,EAAd,KAEMC,EAAY,SAACC,GACjB,OAAQA,GACN,KAAKL,EAAYM,SACfX,IAASE,MAAK,SAAAU,GAAK,OAAIJ,EAASI,MAChC,MACF,KAAKP,EAAYQ,eFNrBb,IACGE,MAAK,SAAAT,GAAK,OACTA,EAAMqB,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEjB,KAAKmB,cAAcD,EAAElB,SAAOoB,MAAM,EAAG,MEK9ChB,MAAK,SAAAU,GAAK,OAAIJ,EAASI,MACnC,MACF,KAAKP,EAAYc,SFFrBnB,IACGE,MAAK,SAAAT,GAAK,OAAIA,EAAM2B,QAAO,SAAAzB,GAAI,MAAmB,QAAfA,EAAKE,YEEvBK,MAAK,SAAAmB,GAAI,OAAIb,EAASa,QAO1C,OACE,qCACE,uDAEA,wBACEC,KAAK,SACLC,QAAS,kBAAMd,EAAUJ,EAAYM,WAFvC,4BAOA,wBACEW,KAAK,SACLC,QAAS,kBAAMd,EAAUJ,EAAYQ,iBAFvC,gCAOA,wBACES,KAAK,SACLC,QAAS,kBAAMd,EAAUJ,EAAYc,WAFvC,4BAOA,cAAC5B,EAAD,CAAWE,MAAOA,UChDxB+B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.9a92ec12.chunk.js","sourcesContent":["import { FC, memo } from 'react';\n\ntype Props = {\n  goods: Good[],\n};\n\nexport const GoodsList: FC<Props> = memo(({ goods }) => {\n  return (\n    <ul>\n      {goods.map(good => (\n        <li key={good.id} style={{ color: good.color }}>\n          {good.name}\n        </li>\n      ))}\n    </ul>\n  );\n});\n","// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = () => (\n  getAll()\n    .then(goods => (\n      goods.sort((a, b) => a.name.localeCompare(b.name)).slice(0, 5)\n    ))\n);\n\nexport const getRedGoods = () => (\n  getAll()\n    .then(goods => goods.filter(good => good.color === 'red'))\n);\n","export enum GoodsToLoad {\n  AllGoods,\n  firstFiveGoods,\n  RedGoods,\n}\n","import React, { useState, memo } from 'react';\nimport './App.scss';\nimport { GoodsList } from './components';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { GoodsToLoad } from './enums/GoodsToLoad';\n\nconst App: React.FC = memo(() => {\n  const [goods, setGoods] = useState<Good[]>([]);\n\n  const loadGoods = (toLoad: GoodsToLoad) => {\n    switch (toLoad) {\n      case GoodsToLoad.AllGoods:\n        getAll().then(items => setGoods(items));\n        break;\n      case GoodsToLoad.firstFiveGoods:\n        get5First().then(items => setGoods(items));\n        break;\n      case GoodsToLoad.RedGoods:\n        getRedGoods().then(item => setGoods(item));\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <>\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        onClick={() => loadGoods(GoodsToLoad.AllGoods)}\n      >\n        Load All goods\n      </button>\n\n      <button\n        type=\"button\"\n        onClick={() => loadGoods(GoodsToLoad.firstFiveGoods)}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        onClick={() => loadGoods(GoodsToLoad.RedGoods)}\n      >\n        Load red goods\n      </button>\n\n      <GoodsList goods={goods} />\n    </>\n  );\n});\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}